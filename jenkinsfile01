currentBuild.displayName = "Going Crazy # "+currentBuild.number

   def getDockerTag(){
        def tag = sh script: 'git rev-parse HEAD', returnStdout: true
        return tag
        }
        

pipeline{
        agent any  
        environment{
	      Docker_tag = getDockerTag()
        }
        
        stages{


              stage('Quality Gate Statuc Check'){
               agent {
                docker {
                image 'maven'
                args '-v $HOME/.m2:/root/.m2'
                }
            }
                  steps ('Analyze static code') {
                    echo 'Analyzing code...'
                      script {
                        // requires SonarQube Scanner 
                        scannerHome = tool 'soanrqube-scaner'
                        }
                      script{
                      withSonarQubeEnv('sonarqube') { 
                      sh "${scannerHome}/bin/sonar-scanner -Dsonar.projectKey=test2 -Dsonar.projectKey=test2 -Dsonar.login=sqp_bac7222cb3e5877cfbb051452282ede74f43a96d -Dsonar.webhooks.project=http://192.168.93.134:8089/sonarqube-webhook/"
                       }					  
                    echo 'Checking quality gate...'
                    sleep(20)
                        timeout(time: 1, unit: 'MINUTES') {
                        waitForQualityGate abortPipeline: true
                      }
                      
                    }
                     sh "mvn clean install"
                  }
                  }
                  stage('Build Image'){
                    steps{
                        script{
                          sh 'docker build . -t mronee/webpage:$Docker_tag'
			                  }
                    }
                  }
                  stage('Login DockerHub Image'){
                     steps{
                        script{
                          withCredentials([usernamePassword(credentialsId: 'Dockerhuub', passwordVariable: 'pocker', usernameVariable: 'locker')]) {
                          sh 'docker login -u $locker -p $pocker'
                        }
                      }
                     }
                  }
                 stage('Push Image'){
                    sh 'docker push . -t mronee/webpage:$Docker_tag'
                 }
                 stage('Run Docker Image'){
                    sh 'docker run -d -p 8088:80 mronee/webpage:$Docker_tag'
                 }
          }
        }
}    





